apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.microservice.name }}
  labels:
    app: {{ .Values.microservice.name }}
    version: v1
    {{- include "innovation-workshop.labels" . | nindent 4 }}    
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "innovation-workshop.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app: {{ .Values.microservice.name }}
        version: v1
        {{- include "innovation-workshop.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}    
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.microservice.name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          #DEBUG: image: "{{ .Values.image.repository }}/{{ .Release.Namespace }}/{{ .Values.microservice.name }}:{{ .Values.microservice.image.tag }}"
          image: "{{ .Values.image.external.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            limits:
              memory: {{ .Values.microservice.limits.memory }} 
              cpu: {{ .Values.microservice.limits.cpu }} 
            requests:
              memory: {{ .Values.microservice.request.memory }} 
              cpu: {{ .Values.microservice.request.cpu }}
          env:
            - name: JAVA_ARGS
              value: '--spring.profiles.active=production'          
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: jolokia
              containerPort: 8778
              protocol: TCP
          {{- if .Values.microservice.livenessProbe }}          
            {{- if ne .Values.microservice.livenessProbe.path "" }}          
          livenessProbe:
            httpGet:
              path: {{ .Values.microservice.livenessProbe.path }} 
              port: http
            initialDelaySeconds: 20
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 5          
            {{- end }}                
          {{- end }} 
          {{- if .Values.microservice.readinessProbe }}                       
            {{- if ne .Values.microservice.readinessProbe.path "" }}                    
          readinessProbe:
            httpGet:
              path: {{ .Values.microservice.readinessProbe.path }} 
              port: http
            {{- end }}                 
          {{- end }}                 
          resources:          
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
